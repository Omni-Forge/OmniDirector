{
    "name": "my_kvm_cpi",
    "type": "virt",
    "actions": {
        "test_install": {
            "command": "virsh --version",
            "params": [],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "version": {
                        "regex": "^([\\d\\.]+)\\s*$",
                        "group": 1
                    }
                }
            }
        },
        "create_vm": {
            "command": "virt-install --name {vm_name} --memory {memory_mb} --vcpus {cpu_count} --disk path={disk_path},size={size_gb} --os-variant {os_type} --network bridge=virbr0 --graphics none --noautoconsole",
            "params": ["vm_name", "memory_mb", "cpu_count", "disk_path", "size_gb", "os_type"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain creation completed",
                        "transform": "boolean"
                    }
                }
            }
        },
        "delete_vm": {
            "command": "virsh destroy {vm_name} && virsh undefine {vm_name} --remove-all-storage",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": ".*",
                        "transform": "boolean"
                    }
                }
            }
        },
        "has_vm": {
            "command": "virsh dominfo {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "exists": {
                        "regex": "Name:\\s+{vm_name}",
                        "transform": "boolean"
                    }
                }
            }
        },
        "create_disk": {
            "command": "qemu-img create -f qcow2 {disk_path} {size_gb}G",
            "params": ["disk_path", "size_gb"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "size": {
                        "regex": "([\\d\\.]+) (\\w+) created",
                        "group": 1
                    },
                    "unit": {
                        "regex": "([\\d\\.]+) (\\w+) created",
                        "group": 2
                    }
                }
            }
        },
        "delete_disk": {
            "command": "rm -f {disk_path}",
            "params": ["disk_path"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": ".*",
                        "transform": "boolean"
                    }
                }
            }
        },
        "attach_disk": {
            "command": "virsh attach-disk {vm_name} {disk_path} {target_dev} --config --live",
            "params": ["vm_name", "disk_path", "target_dev"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": ".*successfully|attached",
                        "transform": "boolean"
                    }
                }
            }
        },
        "detach_disk": {
            "command": "virsh detach-disk {vm_name} {target_dev} --config --live",
            "params": ["vm_name", "target_dev"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": ".*successfully|detached",
                        "transform": "boolean"
                    }
                }
            }
        },
        "get_vm": {
            "command": "virsh dumpxml {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "properties",
                "patterns": {
                    "name": {
                        "regex": "<name>(.*?)</name>",
                        "group": 1
                    },
                    "uuid": {
                        "regex": "<uuid>(.*?)</uuid>",
                        "group": 1
                    },
                    "memory": {
                        "regex": "<memory.*?>(\\d+)</memory>",
                        "group": 1,
                        "transform": "number"
                    },
                    "vcpu": {
                        "regex": "<vcpu.*?>(\\d+)</vcpu>",
                        "group": 1,
                        "transform": "number"
                    }
                }
            }
        },
        "reboot_vm": {
            "command": "virsh reboot {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain .* is being rebooted",
                        "transform": "boolean"
                    }
                }
            }
        },
        "start_vm": {
            "command": "virsh start {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain .* started",
                        "transform": "boolean"
                    }
                }
            }
        },
        "stop_vm": {
            "command": "virsh shutdown {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain .* is being shutdown",
                        "transform": "boolean"
                    }
                }
            }
        },
        "create_snapshot": {
            "command": "virsh snapshot-create-as {vm_name} {snapshot_name}",
            "params": ["vm_name", "snapshot_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain snapshot .* created",
                        "transform": "boolean"
                    }
                }
            }
        },
        "delete_snapshot": {
            "command": "virsh snapshot-delete {vm_name} {snapshot_name}",
            "params": ["vm_name", "snapshot_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "success": {
                        "regex": "Domain snapshot .* deleted",
                        "transform": "boolean"
                    }
                }
            }
        },
        "has_snapshot": {
            "command": "virsh snapshot-list {vm_name} | grep {snapshot_name}",
            "params": ["vm_name", "snapshot_name"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "exists": {
                        "regex": "{snapshot_name}",
                        "transform": "boolean"
                    }
                }
            }
        },
        "get_disks": {
            "command": "virsh domblklist {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "array",
                "separator": "\n",
                "patterns": {
                    "target": {
                        "regex": "^(\\S+)\\s+(\\S+)",
                        "group": 1
                    },
                    "source": {
                        "regex": "^(\\S+)\\s+(\\S+)",
                        "group": 2
                    }
                }
            }
        },
        "get_snapshots": {
            "command": "virsh snapshot-list {vm_name}",
            "params": ["vm_name"],
            "parse_rules": {
                "type": "array",
                "separator": "\n",
                "patterns": {
                    "name": {
                        "regex": "^\\s*(\\S+)\\s+",
                        "group": 1
                    }
                }
            }
        },
        "has_disk": {
            "command": "ls -la {disk_path}",
            "params": ["disk_path"],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "exists": {
                        "regex": ".*",
                        "transform": "boolean"
                    }
                }
            }
        }
    },
    "default_settings": {
        "os_type": "ubuntu20.04",
        "memory_mb": 2048,
        "cpu_count": 2,
        "disk_format": "qcow2"
    }
}